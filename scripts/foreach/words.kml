<project><!-- CACHE ID 2ff2ef7d-5e02-40a8-8a19-da840b1ffbac -->
  <import file="sys.xml"/>
  <import file="scheduler.xml"/>
  <import file="rlog.xml"/>
  <import file="vdl.k"/>
  <types>
     <xs:schema targetNamespace="http://ci.uchicago.edu/swift/2009/02/swiftscript" xmlns="http://ci.uchicago.edu/swift/2009/02/swiftscript" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      	   <xs:simpleType name="inputfile">
      	   <xs:restriction base="string"/>
      	   </xs:simpleType>
      	   <xs:simpleType name="shellfile">
      	   <xs:restriction base="string"/>
      	   </xs:simpleType>
      	   <xs:simpleType name="pythonfile">
      	   <xs:restriction base="string"/>
      	   </xs:simpleType>
      	   <xs:simpleType name="reducefile">
      	   <xs:restriction base="string"/>
      	   </xs:simpleType>
      	   <xs:simpleType name="resultfile">
      	   <xs:restriction base="string"/>
      	   </xs:simpleType>
      	   <xs:complexType name="word">
      	   <xs:sequence>
      	        <xs:element name="w" type="string"/>
      	        <xs:element name="c" type="int"/>
      	   </xs:sequence>
      	   </xs:complexType>
      	   <xs:complexType name="fullcount">
      	   <xs:sequence>
      	        <xs:element name="words" type="word[]"/>
      	   </xs:sequence>
      	   </xs:complexType>  
     </xs:schema>	 
  </types>
  <global name="swift#string#17010">
    <vdl:new type="string" value="reducecount.py" />
  </global>
  <global name="swift#string#17000">
    <vdl:new type="string" value="source" />
  </global>
  <global name="swift#string#17019">
    <vdl:new type="string" value="(.*)txt" />
  </global>
  <global name="swift#string#17004">
    <vdl:new type="string" value="aggregate.sh" />
  </global>
  <global name="swift#string#17006">
    <vdl:new type="string" value="mapcount.py" />
  </global>
  <global name="swift#string#17021">
    <vdl:new type="string" value="\1reduce" />
  </global>
  <global name="swift#string#17002">
    <vdl:new type="string" value="mapreduce.sh" />
  </global>
  <global name="swift#string#17014">
    <vdl:new type="string" value="files/*.txt" />
  </global>
  <global name="swift#string#17008">
    <vdl:new type="string" value="combinecount.py" />
  </global>
  <global name="swift#string#17016">
    <vdl:new type="string" value="result.txt" />
  </global>
  <global name="swift#string#17012">
    <vdl:new type="string" value="aggregatecount.py" />
  </global>
  <element name="runmapreduce" arguments="sout,shellscript,f,map,combine,reduce">
    <parameterlog>
    <string>input</string>
    <string>shellscript</string>
    <vdl:getdatasetprovenanceid var="{shellscript}" />
    <string>{#thread}</string>
    </parameterlog>
    <parameterlog>
    <string>input</string>
    <string>f</string>
    <vdl:getdatasetprovenanceid var="{f}" />
    <string>{#thread}</string>
    </parameterlog>
    <parameterlog>
    <string>input</string>
    <string>map</string>
    <vdl:getdatasetprovenanceid var="{map}" />
    <string>{#thread}</string>
    </parameterlog>
    <parameterlog>
    <string>input</string>
    <string>combine</string>
    <vdl:getdatasetprovenanceid var="{combine}" />
    <string>{#thread}</string>
    </parameterlog>
    <parameterlog>
    <string>input</string>
    <string>reduce</string>
    <vdl:getdatasetprovenanceid var="{reduce}" />
    <string>{#thread}</string>
    </parameterlog>
    <parameterlog>
    <string>output</string>
    <string>sout</string>
    <vdl:getdatasetprovenanceid var="{sout}" />
    <string>{#thread}</string>
    </parameterlog>
    <log level="debug" message="PROCEDURE line=54 thread={#thread} name=runmapreduce"/>
    <vdl:execute>
      <vdl:tr>shell</vdl:tr>
      <vdl:stagein var="{shellscript}"/>
      <vdl:stagein var="{f}"/>
      <vdl:stagein var="{map}"/>
      <vdl:stagein var="{combine}"/>
      <vdl:stagein var="{reduce}"/>
      <vdl:stageout var="{sout}"/>
      <vdl:arguments>
        <swiftscript:filename>
         <variable>shellscript</variable> 
        </swiftscript:filename>
        <swiftscript:filename>
         <variable>f</variable> 
        </swiftscript:filename>
        <swiftscript:filename>
         <variable>map</variable> 
        </swiftscript:filename>
        <swiftscript:filename>
         <variable>combine</variable> 
        </swiftscript:filename>
        <swiftscript:filename>
         <variable>reduce</variable> 
        </swiftscript:filename>
      </vdl:arguments>
      <vdl:stdout>
        <swiftscript:filename>
         <variable>sout</variable> 
        </swiftscript:filename>
      </vdl:stdout>
    </vdl:execute>
    <vdl:closedataset var="{sout}"/>
    <log level="debug" message="PROCEDURE_END line=54"/></element>

  <element name="runaggregate" arguments="sout,shellscript,aggregate,r,res">
    <parameterlog>
    <string>input</string>
    <string>shellscript</string>
    <vdl:getdatasetprovenanceid var="{shellscript}" />
    <string>{#thread}</string>
    </parameterlog>
    <parameterlog>
    <string>input</string>
    <string>aggregate</string>
    <vdl:getdatasetprovenanceid var="{aggregate}" />
    <string>{#thread}</string>
    </parameterlog>
    <parameterlog>
    <string>input</string>
    <string>r</string>
    <vdl:getdatasetprovenanceid var="{r}" />
    <string>{#thread}</string>
    </parameterlog>
    <parameterlog>
    <string>input</string>
    <string>res</string>
    <vdl:getdatasetprovenanceid var="{res}" />
    <string>{#thread}</string>
    </parameterlog>
    <parameterlog>
    <string>output</string>
    <string>sout</string>
    <vdl:getdatasetprovenanceid var="{sout}" />
    <string>{#thread}</string>
    </parameterlog>
    <log level="debug" message="PROCEDURE line=57 thread={#thread} name=runaggregate"/>
    <vdl:execute>
      <vdl:tr>shell</vdl:tr>
      <vdl:stagein var="{shellscript}"/>
      <vdl:stagein var="{aggregate}"/>
      <vdl:stagein var="{r}"/>
      <vdl:stagein var="{res}"/>
      <vdl:stageout var="{sout}"/>
      <vdl:arguments>
        <variable>swift#string#17000</variable>
        <swiftscript:filename>
         <variable>shellscript</variable> 
        </swiftscript:filename>
        <swiftscript:filename>
         <variable>aggregate</variable> 
        </swiftscript:filename>
        <swiftscript:filename>
         <variable>r</variable> 
        </swiftscript:filename>
        <swiftscript:filename>
         <variable>res</variable> 
        </swiftscript:filename>
      </vdl:arguments>
      <vdl:stdout>
        <swiftscript:filename>
         <variable>sout</variable> 
        </swiftscript:filename>
      </vdl:stdout>
    </vdl:execute>
    <vdl:closedataset var="{sout}"/>
    <log level="debug" message="PROCEDURE_END line=57"/></element>

  <element name="cat" arguments="output,input">
    <parameterlog>
    <string>input</string>
    <string>input</string>
    <vdl:getdatasetprovenanceid var="{input}" />
    <string>{#thread}</string>
    </parameterlog>
    <parameterlog>
    <string>output</string>
    <string>output</string>
    <vdl:getdatasetprovenanceid var="{output}" />
    <string>{#thread}</string>
    </parameterlog>
    <log level="debug" message="PROCEDURE line=71 thread={#thread} name=cat"/>
    <vdl:execute>
      <vdl:tr>cat</vdl:tr>
      <vdl:stagein var="{input}"/>
      <vdl:stageout var="{output}"/>
      <vdl:arguments>
        <swiftscript:filename>
         <variable>input</variable> 
        </swiftscript:filename>
      </vdl:arguments>
      <vdl:stdout>
        <swiftscript:filename>
         <variable>output</variable> 
        </swiftscript:filename>
      </vdl:stdout>
    </vdl:execute>
    <vdl:closedataset var="{output}"/>
    <log level="debug" message="PROCEDURE_END line=71"/></element>

  <set name="swift#mapper#17001">
        <vdl:new type="string" dbgname="swift#mapper#17001" waitfor="" />
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>swift#mapper#17001</string>
  <vdl:getdatasetprovenanceid var="{swift#mapper#17001}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="mapreduce_shell_script">
    <vdl:new type="shellfile" dbgname="mapreduce_shell_script">
      <vdl:mapping descriptor="single_file_mapper">
        <vdl:parameter name="file"><vdl:new type="string" value="mapreduce.sh" /></vdl:parameter>
        <vdl:parameter name="input" value="true" />
      </vdl:mapping>
    </vdl:new>
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>mapreduce_shell_script</string>
  <vdl:getdatasetprovenanceid var="{mapreduce_shell_script}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="swift#mapper#17003">
        <vdl:new type="string" dbgname="swift#mapper#17003" waitfor="" />
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>swift#mapper#17003</string>
  <vdl:getdatasetprovenanceid var="{swift#mapper#17003}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="aggregate_shell_script">
    <vdl:new type="shellfile" dbgname="aggregate_shell_script">
      <vdl:mapping descriptor="single_file_mapper">
        <vdl:parameter name="file"><vdl:new type="string" value="aggregate.sh" /></vdl:parameter>
        <vdl:parameter name="input" value="true" />
      </vdl:mapping>
    </vdl:new>
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>aggregate_shell_script</string>
  <vdl:getdatasetprovenanceid var="{aggregate_shell_script}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="swift#mapper#17005">
        <vdl:new type="string" dbgname="swift#mapper#17005" waitfor="" />
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>swift#mapper#17005</string>
  <vdl:getdatasetprovenanceid var="{swift#mapper#17005}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="map_fun">
    <vdl:new type="pythonfile" dbgname="map_fun">
      <vdl:mapping descriptor="single_file_mapper">
        <vdl:parameter name="file"><vdl:new type="string" value="mapcount.py" /></vdl:parameter>
        <vdl:parameter name="input" value="true" />
      </vdl:mapping>
    </vdl:new>
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>map_fun</string>
  <vdl:getdatasetprovenanceid var="{map_fun}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="swift#mapper#17007">
        <vdl:new type="string" dbgname="swift#mapper#17007" waitfor="" />
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>swift#mapper#17007</string>
  <vdl:getdatasetprovenanceid var="{swift#mapper#17007}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="combine_fun">
    <vdl:new type="pythonfile" dbgname="combine_fun">
      <vdl:mapping descriptor="single_file_mapper">
        <vdl:parameter name="file"><vdl:new type="string" value="combinecount.py" /></vdl:parameter>
        <vdl:parameter name="input" value="true" />
      </vdl:mapping>
    </vdl:new>
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>combine_fun</string>
  <vdl:getdatasetprovenanceid var="{combine_fun}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="swift#mapper#17009">
        <vdl:new type="string" dbgname="swift#mapper#17009" waitfor="" />
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>swift#mapper#17009</string>
  <vdl:getdatasetprovenanceid var="{swift#mapper#17009}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="reduce_fun">
    <vdl:new type="pythonfile" dbgname="reduce_fun">
      <vdl:mapping descriptor="single_file_mapper">
        <vdl:parameter name="file"><vdl:new type="string" value="reducecount.py" /></vdl:parameter>
        <vdl:parameter name="input" value="true" />
      </vdl:mapping>
    </vdl:new>
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>reduce_fun</string>
  <vdl:getdatasetprovenanceid var="{reduce_fun}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="swift#mapper#17011">
        <vdl:new type="string" dbgname="swift#mapper#17011" waitfor="" />
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>swift#mapper#17011</string>
  <vdl:getdatasetprovenanceid var="{swift#mapper#17011}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="aggregate_fun">
    <vdl:new type="pythonfile" dbgname="aggregate_fun">
      <vdl:mapping descriptor="single_file_mapper">
        <vdl:parameter name="file"><vdl:new type="string" value="aggregatecount.py" /></vdl:parameter>
        <vdl:parameter name="input" value="true" />
      </vdl:mapping>
    </vdl:new>
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>aggregate_fun</string>
  <vdl:getdatasetprovenanceid var="{aggregate_fun}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="swift#mapper#17013">
        <vdl:new type="string" dbgname="swift#mapper#17013" waitfor="" />
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>swift#mapper#17013</string>
  <vdl:getdatasetprovenanceid var="{swift#mapper#17013}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="inputfiles">
    <vdl:new type="inputfile[]" dbgname="inputfiles">
      <vdl:mapping descriptor="filesys_mapper">
        <vdl:parameter name="files"><vdl:new type="string" value="files/*.txt" /></vdl:parameter>
        <vdl:parameter name="input" value="true" />
      </vdl:mapping>
    </vdl:new>
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>inputfiles</string>
  <vdl:getdatasetprovenanceid var="{inputfiles}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="swift#mapper#17015">
        <vdl:new type="string" dbgname="swift#mapper#17015" waitfor="" />
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>swift#mapper#17015</string>
  <vdl:getdatasetprovenanceid var="{swift#mapper#17015}" />
  <string>{#thread}</string>
  </parameterlog>
  <set name="result">
    <vdl:new type="resultfile" dbgname="result">
      <vdl:mapping descriptor="single_file_mapper">
        <vdl:parameter name="file"><vdl:new type="string" value="result.txt" /></vdl:parameter>
        <vdl:parameter name="input" value="true" />
      </vdl:mapping>
    </vdl:new>
  </set>
  <parameterlog>
  <string>intermediate</string>
  <string>result</string>
  <vdl:getdatasetprovenanceid var="{result}" />
  <string>{#thread}</string>
  </parameterlog>
  <restartLog>
  	<vdl:mains>
		<vdl:startprogressticker />
		<vdl:mainp>
		    <parallel>
		        <sequential>
		             <vdl:setfieldvalue>
		               <argument name="var">
		                 <variable>swift#mapper#17001</variable>
		               </argument>
		               <argument name="value">
		                 <variable>swift#string#17002</variable>
		               </argument>
		             </vdl:setfieldvalue>
		        </sequential>
		        <sequential>
		             <vdl:setfieldvalue>
		               <argument name="var">
		                 <variable>swift#mapper#17003</variable>
		               </argument>
		               <argument name="value">
		                 <variable>swift#string#17004</variable>
		               </argument>
		             </vdl:setfieldvalue>
		        </sequential>
		        <sequential>
		             <vdl:setfieldvalue>
		               <argument name="var">
		                 <variable>swift#mapper#17005</variable>
		               </argument>
		               <argument name="value">
		                 <variable>swift#string#17006</variable>
		               </argument>
		             </vdl:setfieldvalue>
		        </sequential>
		        <sequential>
		             <vdl:setfieldvalue>
		               <argument name="var">
		                 <variable>swift#mapper#17007</variable>
		               </argument>
		               <argument name="value">
		                 <variable>swift#string#17008</variable>
		               </argument>
		             </vdl:setfieldvalue>
		        </sequential>
		        <sequential>
		             <vdl:setfieldvalue>
		               <argument name="var">
		                 <variable>swift#mapper#17009</variable>
		               </argument>
		               <argument name="value">
		                 <variable>swift#string#17010</variable>
		               </argument>
		             </vdl:setfieldvalue>
		        </sequential>
		        <sequential>
		             <vdl:setfieldvalue>
		               <argument name="var">
		                 <variable>swift#mapper#17011</variable>
		               </argument>
		               <argument name="value">
		                 <variable>swift#string#17012</variable>
		               </argument>
		             </vdl:setfieldvalue>
		        </sequential>
		        <sequential>
		             <vdl:setfieldvalue>
		               <argument name="var">
		                 <variable>swift#mapper#17013</variable>
		               </argument>
		               <argument name="value">
		                 <variable>swift#string#17014</variable>
		               </argument>
		             </vdl:setfieldvalue>
		        </sequential>
		        <sequential>
		             <vdl:setfieldvalue>
		               <argument name="var">
		                 <variable>swift#mapper#17015</variable>
		               </argument>
		               <argument name="value">
		                 <variable>swift#string#17016</variable>
		               </argument>
		             </vdl:setfieldvalue>
		        </sequential>
		        <sequential>
		          <vdl:tparallelFor name="$">
		            <getarrayiterator><variable>inputfiles</variable></getarrayiterator>
		            <set names="$$, f">
		              <each items="{$}"/>
		            </set>
		          	<log level="debug" message="FOREACH_IT_START line=92 thread={#thread}"/>
		          <log level="debug"><string>SCOPE thread={#thread}</string></log>

		              <set name="swift#mapper#17017">
		                    <vdl:new type="string" dbgname="swift#mapper#17017" waitfor="" />
		              </set>
		              <parameterlog>
		              <string>intermediate</string>
		              <string>swift#mapper#17017</string>
		              <vdl:getdatasetprovenanceid var="{swift#mapper#17017}" />
		              <string>{#thread}</string>
		              </parameterlog>
		              <set name="swift#mapper#17018">
		                    <vdl:new type="string" dbgname="swift#mapper#17018" waitfor="" />
		              </set>
		              <parameterlog>
		              <string>intermediate</string>
		              <string>swift#mapper#17018</string>
		              <vdl:getdatasetprovenanceid var="{swift#mapper#17018}" />
		              <string>{#thread}</string>
		              </parameterlog>
		              <set name="swift#mapper#17020">
		                    <vdl:new type="string" dbgname="swift#mapper#17020" waitfor="" />
		              </set>
		              <parameterlog>
		              <string>intermediate</string>
		              <string>swift#mapper#17020</string>
		              <vdl:getdatasetprovenanceid var="{swift#mapper#17020}" />
		              <string>{#thread}</string>
		              </parameterlog>
		              <set name="r">
		                <vdl:new type="reducefile" dbgname="r" waitfor="88000">
		                  <vdl:mapping descriptor="regexp_mapper">
		                    <vdl:parameter name="source"><variable>swift#mapper#17017</variable></vdl:parameter>
		                    <vdl:parameter name="match"><vdl:new type="string" value="(.*)txt" /></vdl:parameter>
		                    <vdl:parameter name="transform"><vdl:new type="string" value="\1reduce" /></vdl:parameter>
		                  </vdl:mapping>
		                </vdl:new>
		              </set>
		              <parameterlog>
		              <string>intermediate</string>
		              <string>r</string>
		              <vdl:getdatasetprovenanceid var="{r}" />
		              <string>{#thread}</string>
		              </parameterlog>
		                <parallel>
		                    <sequential>
		                         <vdl:setfieldvalue>
		                           <argument name="var">
		                             <variable>swift#mapper#17017</variable>
		                           </argument>
		                           <argument name="value">
		                             <swiftscript:filename>
		                              <variable>f</variable> 
		                             </swiftscript:filename>
		                           </argument>
		                         </vdl:setfieldvalue>
		                    </sequential>
		                    <sequential>
		                         <vdl:setfieldvalue>
		                           <argument name="var">
		                             <variable>swift#mapper#17018</variable>
		                           </argument>
		                           <argument name="value">
		                             <variable>swift#string#17019</variable>
		                           </argument>
		                         </vdl:setfieldvalue>
		                    </sequential>
		                    <sequential>
		                         <vdl:setfieldvalue>
		                           <argument name="var">
		                             <variable>swift#mapper#17020</variable>
		                           </argument>
		                           <argument name="value">
		                             <variable>swift#string#17021</variable>
		                           </argument>
		                         </vdl:setfieldvalue>
		                    </sequential>
		                    <sequential>
		                      <runmapreduce>
		                        <parallel>
		                          <variable>r</variable>
		                          <variable>mapreduce_shell_script</variable>
		                          <variable>f</variable>
		                          <variable>map_fun</variable>
		                          <variable>combine_fun</variable>
		                          <variable>reduce_fun</variable>
		                        </parallel>
		                      </runmapreduce>
		                        <partialCloseDataset var="{r}" closeID="88000" />
		                    </sequential>
		                </parallel>
		              <log level="debug" message="FOREACH_IT_END line=92 thread={#thread}"/>
		          </vdl:tparallelFor>
		        </sequential>
		    </parallel>
		</vdl:mainp>
		<vdl:stopprogressticker />
	</vdl:mains>
  </restartLog>  
</project>
