# Keep all interesting settings in one place
# User should modify this to fit environment

# Location of SWIFT. If empty, PATH is referenced
export SWIFT=

# Where to place/launch worker.pl on the remote machine for sites.xml
export WORKER_LOCATION=/sandbox/${USER}

# How to launch workers: local, ssh, or cobalt
export WORKER_MODE=ssh

# Worker logging setting passed to worker.pl for sites.xml
export WORKER_LOGGING=INFO

# User name to use for all systems
export WORKER_USERNAME=$USER

# Worker host names for ssh
export WORKER_HOSTS="crush.mcs.anl.gov thwomp.mcs.anl.gov stomp.mcs.anl.gov crank.mcs.anl.gov
steamroller.mcs.anl.gov grind.mcs.anl.gov churn.mcs.anl.gov trounce.mcs.anl.gov
thrash.mcs.anl.gov vanquish.mcs.anl.gov"

# Directory to keep log files, relative to working directory when launching start-coaster-service
export LOG_DIR=logs
export WORKER_LOG_DIR=/home/ketan/worker.log

# Manually define ports. If not specified, ports will be automatically generated
export LOCAL_PORT=
export SERVICE_PORT=

# Set shared filesystem to no since work will be done in local /sandbox directory
export SHARED_FILESYSTEM=no

# start-coaster-service tries to automatically detect IP address. 
# Specify here if auto detection is not working correctly
export IPADDR=

# Below are various settings to give information about how to create sites.xml
 export WORK=/sandbox/${USER}
 export JOBS_PER_NODE=8
 export JOB_THROTTLE=$( echo "scale=5; ($JOBS_PER_NODE * $( echo $WORKER_HOSTS | wc -w ))/100 - 0.00001"|bc )

# Swift applications
#app cat=/bin/cat
#app bash=/bin/bash
#app echo=/bin/echo

